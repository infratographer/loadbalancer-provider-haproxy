image:
  repository: ghcr.io/infratographer/loadbalancer-provider-haproxy
  pullPolicy: IfNotPresent
  tag: "v0.0.2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

service:
  type: ClusterIP
  port: 80

provider:
  ipBlock: ""
  healthCheckPort: "8080"
  replicas: 1
  extraLabels: []
  extraAnnotations: []
  extraEnvFrom: {}
  extraEnvVars: []
  resources: {}
  podSecurityContext: {}
  securityContext: {}
  api:
    endpoint: "https://localhost:7608/query"
    oidc:
      enabled: false
      client:
        issuer: ""
  ipam:
    endpoint: "https://localhost:7609/query"
  events:
    queueGroup: "my-queue-group"
    connectionURL: "nats://my-events-cluster.example.com:4222"
    auth:
      secretName: ""
      credsPath: "/creds"
    topicPrefix: "com.infratographer"
    changeTopics:
      - "*.load-balancer"
      - "events.create.port"
    location: ""
  tracing:
    # enabled is true if OpenTelemetry tracing should be enabled for load-balancer-operator
    enabled: false
    # environment is the OpenTelemetry tracing environment to use
    environment: ""
    # provider is the OpenTelemetry tracing provider to use
    provider: stdout
    jaeger:
      # endpoint is the Jaeger collector to send traces to
      endpoint: ""
      # user is the user to use when authenticating against the Jaeger deployment
      user: ""
      # password is the password to use when authenticating against the Jaeger deployment
      password: ""
    otlp:
      # endpoint is the OpenTelemetry Protocol (OTLP) collector endpoint to send traces to
      endpoint: ""
      # insecure is true if TLS should not be required when sending traces
      insecure: false

reloader:
  enabled: false
